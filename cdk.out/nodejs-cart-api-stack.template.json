{
 "Resources": {
  "nodejscartapiexpressserverlambdaServiceRole3A8D17F6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "nodejs-cart-api-stack/nodejs-cart-api-express-server-lambda/ServiceRole/Resource"
   }
  },
  "nodejscartapiexpressserverlambdaB97CA2D2": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ec8825cac01267812642c532d906c491ccf0c8c2f5ea374cbfa4be09609bb45c.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "nodejscartapiexpressserverlambdaServiceRole3A8D17F6",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "DATABASE": "",
      "HOST": "database-task8.cyz5zmmw9d9n.eu-west-1.rds.amazonaws.com",
      "PORT": "5432",
      "USER": "postgres",
      "PASSWORD": "Chromole1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "expressServerHandler",
    "Handler": "index.lambda",
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "nodejscartapiexpressserverlambdaServiceRole3A8D17F6"
   ],
   "Metadata": {
    "aws:cdk:path": "nodejs-cart-api-stack/nodejs-cart-api-express-server-lambda/Resource",
    "aws:asset:path": "asset.ec8825cac01267812642c532d906c491ccf0c8c2f5ea374cbfa4be09609bb45c",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "nodejscartsapi8073F737": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "CorsConfiguration": {
     "AllowHeaders": [
      "*"
     ],
     "AllowMethods": [
      "*"
     ],
     "AllowOrigins": [
      "*"
     ]
    },
    "Name": "nodejs-carts-api",
    "ProtocolType": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "nodejs-cart-api-stack/nodejs-carts-api/Resource"
   }
  },
  "nodejscartsapiDefaultStageDAE75F12": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "nodejscartsapi8073F737"
    },
    "StageName": "$default",
    "AutoDeploy": true
   },
   "Metadata": {
    "aws:cdk:path": "nodejs-cart-api-stack/nodejs-carts-api/DefaultStage/Resource"
   }
  },
  "nodejscartsapiANYproxyexpressHandlerintegrationE8A05FD4": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "nodejscartsapi8073F737"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "nodejscartapiexpressserverlambdaB97CA2D2",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "nodejs-cart-api-stack/nodejs-carts-api/ANY--{proxy+}/expressHandler-integration/Resource"
   }
  },
  "nodejscartsapiANYproxyexpressHandlerintegrationPermission631BF462": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "nodejscartapiexpressserverlambdaB97CA2D2",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "nodejscartsapi8073F737"
       },
       "/*/*/{proxy+}"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "nodejs-cart-api-stack/nodejs-carts-api/ANY--{proxy+}/expressHandler-integration-Permission"
   }
  },
  "nodejscartsapiANYproxy928A6467": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "nodejscartsapi8073F737"
    },
    "RouteKey": "ANY /{proxy+}",
    "AuthorizationType": "NONE",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "nodejscartsapiANYproxyexpressHandlerintegrationE8A05FD4"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "nodejs-cart-api-stack/nodejs-carts-api/ANY--{proxy+}/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/01Qy27CMBD8Fu7OEqjUciwgVe2lqtIPiBZnGzYPO8o6oMrKv9d2oOI0s+vxzNhb2L2Az1d4lUxXbdbxCfy3Q92qsCp9h/2pwtLYihqBzwRvk9GOrVGMPfjCdqSOPybirOSpRBFyAvsIYYbDpFtyBxRSixv4IP83CfyLxp5FwjQrHLhGR1f8vWyTcD9w1IROdcr5MI7qEe93Czs5mmdVkNhp1KRSblSzqZPgfhD40ZqKXcrJM+yGM0K+er29fR3xMf6m8O/ODbFFxKVGZCk4sYdGoUj8KmhkfdnsYPMc/BthzsbJOO4JigX/AOvSnV93AQAA"
   },
   "Metadata": {
    "aws:cdk:path": "nodejs-cart-api-stack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}